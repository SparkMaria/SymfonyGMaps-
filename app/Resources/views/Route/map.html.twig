{% extends 'base.html.twig' %}

{% block body %}


    <div class="container-fluid">


        <div class="input-group">
            <div class="row">
                <div class="col-xs-6">
                    <input id="pac-input" class="form-control" type="text" placeholder="Search Box"/>

                </div>
            </div>
        </div>

        <div class='row'>
            <div id="googleMap" style="width:100%;height:600px;"></div>
        </div>

        {# <div class='row'>
             <div class='col-xs-12'>
                 <button class='btn btn-primary' onclick='loadData()'>Load places from DB</button>
 
             </div>
         </div>#}


    </div>



    <script>

        var map;
        var infowindow;
        var markers;


        function initMap() {

            var mapProp = {
                center: new google.maps.LatLng(51.2182404, 22.4236861),
                zoom: 4,
                mapTypeControl: false,
                mapTypeControlOptions: {
        {#                    position: google.maps.ControlPosition.BOTTOM_LEFT#}
                    },
                };
                map = new google.maps.Map(document.getElementById("googleMap"), mapProp);

                infowindow = new google.maps.InfoWindow();

{#                loadData();#}
                loadData1();





                function placeMarker(map, location) {
                    var marker = new google.maps.Marker({
                        position: location,
                        map: map
                    });
        {#                console.log(marker.getPosition().lat());#}

                    var geocoder = new google.maps.Geocoder;

                    geocoder.geocode({'location': location}, function (results, status) {
                        if (status === 'OK') {
                            if (results[0]) {


                                marker.setTitle(results[results.length - 2].formatted_address);

                                $.ajax({
                                    type: 'POST',
                                    url: '/app_dev.php/map',
                                    data: {'name': marker.getTitle(), 'lat': marker.getPosition().lat(), 'lng': marker.getPosition().lng()},
                                    success: function (data) {
                                        $('#results').html(data);
                                    }
                                });


                                infowindow.setContent(results[results.length - 2].formatted_address);
                                infowindow.open(map, marker);
                            } else {
                                window.alert('No results found');
                            }
                        } else {
                            window.alert('Geocoder failed due to: ' + status);
                        }
                    });


                    infowindow.open(map, marker);


                    google.maps.event.addListener(marker, 'click', function (event) {
        {#                          console.log(document);#}
        {#                    document.getElementById('form').reset();#}
        {#                        infowindow.setContent($('#form').html());#}
                        infowindow.setContent(this.get('title'));
                        infowindow.open(map, marker);
                    });
        {#                    console.log(map.markers.length);#}
                }


                google.maps.event.addListener(map, 'click', function (event) {
                    placeMarker(map, event.latLng);
                }
                );

                // Create the search box and link it to the UI element.
                var input = document.getElementById('pac-input');
                var searchBox = new google.maps.places.SearchBox(input);
                map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

                searchBox.addListener('places_changed', function () {
                    var places = searchBox.getPlaces();

                    if (places.length == 0) {
                        return;
                    }

                    // Clear out the old markers.
        {#    markers.forEach(function (marker) {
                marker.setMap(null);
            });#}
                        markers = [];

                        // For each place, get the icon, name and location.
                        var bounds = new google.maps.LatLngBounds();
                        places.forEach(function (place) {
                            if (!place.geometry) {
                                console.log("Returned place contains no geometry");
                                return;
                            }


                            // Create a marker for each place.
                            var newMarker = new google.maps.Marker({
                                map: map,
                                title: place.name,
                                position: place.geometry.location
                            })

                            markers.push(newMarker);

                            $.ajax({
                                type: 'POST',
                                url: '/app_dev.php/map',
                                data: {'name': newMarker.getTitle(), 'lat': newMarker.getPosition().lat(), 'lng': newMarker.getPosition().lng()},
                                success: function (data) {
                                    $('#results').html(data);
                                }
                            });

                        });

                    });

                }


                function loadData() {


                    infowindow = new google.maps.InfoWindow();

                    $.ajax({
                        type: 'POST',
                        url: '/app_dev.php/getLocations',
                        dataType: 'json',
                        success: function (data) {
        {#                                console.log(data);#}

                        var locations = JSON.parse(data);
        {#                        console.log(locations[0]);#}
        {#                        console.log(locations.length);#}
                        var i;

                        for (i = 0; i < locations.length; i++) {

                            var marker = new google.maps.Marker({
                                title: locations[i].name,
                                position: new google.maps.LatLng(locations[i].lat, locations[i].lng),
                                map: map
                            });


                            google.maps.event.addListener(marker, 'click', function (event) {

                                infowindow.setContent(this.getTitle());

                                infowindow.open(map, this);

                            });
                        }
                    }

                });

            }

            function loadData1() {

                var locations = JSON.parse('{{ locations | raw }}');
                console.log(locations);

                var i;

                for (i = 0; i < locations.length; i++) {

                    var marker = new google.maps.Marker({
                        title: locations[i].name,
                        position: new google.maps.LatLng(locations[i].lat, locations[i].lng),
                        map: map
                    });


                    google.maps.event.addListener(marker, 'click', function (event) {

                        infowindow.setContent(this.getTitle());

                        infowindow.open(map, this);

                    });
                }
            }




    </script>

    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBdKZUZzkwOXBHm0SXPz4GGKyA7i4MWLT8&callback=initMap&libraries=places">
    </script>
    {#  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>#}

{% endblock %}



